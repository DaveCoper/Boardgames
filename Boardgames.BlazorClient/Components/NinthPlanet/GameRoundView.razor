@using Boardgames.NinthPlanet.Models
@using Boardgames.BlazorClient.Extensions
@using Boardgames.BlazorClient.Components
@using Boardgames.BlazorClient.Components.NinthPlanet
@using Boardgames.Client.ViewModels.NinthPlanet
@using Boardgames.NinthPlanet.Client
@inject Services.DragDropDataStore dragDropStore

<div class="container">
    <div class="row">
        @foreach (var player in roundViewModel.StateOfAllies)
        {
            <div class="col-auto" style="height:250px">
                <RemotePlayerView Player="player" />
            </div>
        }
    </div>
    <div class="row" style="height:250px"
         @ondragover:preventDefault
         @ondragover="() => { }"
         @ondragenter:preventDefault
         @ondragenter="() => { }"
         @ondrop="OnDropToPlayArea"
         @ondrop:preventDefault>

    </div>
    <div class="row" style="height:250px">
        <div class="col-lg-12">
            <LocalPlayerView LocalPlayer="@roundViewModel.UserState" />
        </div>
    </div>
</div>

@code {

    private GameRound roundViewModel;

    [Parameter]
    public GameRound RoundViewModel
    {
        get => roundViewModel;
        set
        {
            roundViewModel = value;
            if (roundViewModel != null)
            {
                //roundViewModel.UpdateOnPropertyChanged(this.StateHasChanged);
            }
        }
    }

    public async Task OnDropToPlayArea(DragEventArgs args)
    {
        if (dragDropStore.DragDropData is Card card)
        {
            //await roundViewModel.LocalPlayer.PlayCardAsync(card);
        }
    }
}
