@page "/creategame"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Boardgames.Client.ViewModels
@using Boardgames.Client.Models
@using Boardgames.Client.Services
@using Boardgames.BlazorClient.Extensions
@attribute [Authorize]
@inject CreateGameViewModel createGameViewModel

<div class="container">
    <div class="row">
        <div class="col-auto">
            <h4>Choose a game:</h4>
            @foreach (var game in createGameViewModel.AvailableGames)
            {
                <button type="button" 
                        class="btn btn-primary @(createGameViewModel.SelectedGame==game ? "active" : "")" 
                        data-toggle="button" 
                        aria-pressed="@(createGameViewModel.SelectedGame==game ? "true" : "false")" 
                        autocomplete="off" 
                        style="background: url( @game.Icon128x128 ) no-repeat; width: 128px; height: 128px;" 
                        @onclick="()=>createGameViewModel.SelectedGame=game" />
            }
        </div>
    </div>
    <div class="row">
        <div class="col-md-9">
            <h4>Game settings:</h4>
            <div class="row">
                <div class="col-md-9">
                    @if (createGameViewModel.GameSettings is NinthPlanetNewGameOptions ninthPlanet)
                    {
                        <EditForm Model="ninthPlanet" OnValidSubmit="() => createGameViewModel.CreateGameCommand.Execute(null)">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            <div class="form-group">
                                <label>Name:</label>
                                <InputText @bind-Value="ninthPlanet.Name" />
                            </div>
                            <div class="form-group">
                                <label>Maximum number of players:</label>
                                <InputNumber @bind-Value="ninthPlanet.MaxNumberOfPlayers" />
                            </div>
                            <div class="form-group">

                                <label>Game is visible to public:</label>
                                <InputCheckbox @bind-Value="ninthPlanet.IsPublic" />
                            </div>

                            <button class="btn btn-primary" type="submit">Create game</button>
                        </EditForm>
                    }
                </div>
            </div>
        </div>
    </div>
</div>


@code{

    protected override async Task OnInitializedAsync()
    {
        await createGameViewModel.LoadDataAsync();
        createGameViewModel.UpdateOnPropertyChanged(this.StateHasChanged);
        await base.OnInitializedAsync();
    }

}